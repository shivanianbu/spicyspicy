{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false); // const [cart, setCart] = useState([])\n  // const [history, setHistory] = useState([])\n\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          }); // setIsLogged(true)\n          // res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\n          // setCart(res.data.cart)\n\n          console.log(res);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]); // const addCart = async (product) => {\n  //     if(!isLogged) return alert(\"Please login to continue buying\")\n  //     const check = cart.every(item =>{\n  //         return item._id !== product._id\n  //     })\n  //     if(check){\n  //         setCart([...cart, {...product, quantity: 1}])\n  //         await axios.patch('/user/addcart', {cart: [...cart, {...product, quantity: 1}]}, {\n  //             headers: {Authorization: token}\n  //         })\n  //     }else{\n  //         alert(\"This product has been added to cart.\")\n  //     }\n  // }\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin]\n  };\n}\n\nexport default UserAPI;","map":{"version":3,"sources":["C:/Users/ShivaniAnbu/react/spicycorner/client/src/api/UserAPI.js"],"names":["useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","getUser","res","get","headers","Authorization","console","log","err","alert","response","data","msg"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC,CAFoB,CAGpB;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGG,KAAH,EAAS;AACL,YAAMK,OAAO,GAAG,YAAW;AACvB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,aAAV,EAAyB;AACvCC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAET;AAAhB;AAD8B,WAAzB,CAAlB,CADA,CAKA;AACA;AAEA;;AACAU,UAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AAEH,SAXD,CAWE,OAAOM,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaC,IAAb,CAAkBC,GAAnB,CAAL;AACH;AACJ,OAfD;;AAiBAX,MAAAA,OAAO;AAEV;AACJ,GAtBQ,EAsBP,CAACL,KAAD,CAtBO,CAAT,CANoB,CAgCpB;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADP;AAEHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV;AAFN,GAAP;AAIH;;AAED,eAAeL,OAAf","sourcesContent":["import {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction UserAPI(token) {\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    // const [cart, setCart] = useState([])\r\n    // const [history, setHistory] = useState([])\r\n\r\n    useEffect(() =>{\r\n        if(token){\r\n            const getUser = async () =>{\r\n                try {\r\n                    const res = await axios.get('/user/infor', {\r\n                        headers: {Authorization: token}\r\n                    })\r\n\r\n                    // setIsLogged(true)\r\n                    // res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n\r\n                    // setCart(res.data.cart)\r\n                    console.log(res)\r\n\r\n                } catch (err) {\r\n                    alert(err.response.data.msg)\r\n                }\r\n            }\r\n\r\n            getUser()\r\n            \r\n        }\r\n    },[token])\r\n\r\n    \r\n\r\n    // const addCart = async (product) => {\r\n    //     if(!isLogged) return alert(\"Please login to continue buying\")\r\n\r\n    //     const check = cart.every(item =>{\r\n    //         return item._id !== product._id\r\n    //     })\r\n\r\n    //     if(check){\r\n    //         setCart([...cart, {...product, quantity: 1}])\r\n\r\n    //         await axios.patch('/user/addcart', {cart: [...cart, {...product, quantity: 1}]}, {\r\n    //             headers: {Authorization: token}\r\n    //         })\r\n\r\n    //     }else{\r\n    //         alert(\"This product has been added to cart.\")\r\n    //     }\r\n    // }\r\n\r\n    return {\r\n        isLogged: [isLogged, setIsLogged],\r\n        isAdmin: [isAdmin, setIsAdmin]\r\n    }\r\n}\r\n\r\nexport default UserAPI\r\n "]},"metadata":{},"sourceType":"module"}